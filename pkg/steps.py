from typing import Literal, Optional, List, Any
from aiogram.types import InlineKeyboardMarkup
from pydantic import BaseModel

from pkg.keyboards import keyboards


class StepField(BaseModel):
    name: str
    prompt: str
    field_type: Optional[Literal["string", "integer", "float", "date_range", "list"]] = "string"
    keyboard: InlineKeyboardMarkup | Any = None


class StepsSchema(BaseModel):
    steps: List[StepField]


steps_schema = StepsSchema(steps=[
    StepField(
        name="city",
        prompt="üìç –í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ —Ç—ã –±—É–¥–µ—à—å —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏?",
        keyboard=keyboards.cities,
    ),
    StepField(
        name="full_name",
        prompt="üìù –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç? (–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é)",
    ),
    StepField(
        name="age",
        prompt="üìÜ –°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?",
    ),
    StepField(
        name="position",
        prompt="üíº –ö–∞–∫–∞—è —É —Ç–µ–±—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å?",
    ),
    StepField(
        name="ai_level",
        prompt=(
            "ü§ñ –û—Ü–µ–Ω–∏ —É—Ä–æ–≤–µ–Ω—å –≤–ª–∞–¥–µ–Ω–∏—è –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏:\n"
            "1 ‚Äî –Ω–µ—Ç –æ–ø—ã—Ç–∞\n"
            "2 ‚Äî –Ω–∞—á–∞–ª—å–Ω—ã–π\n"
            "3 ‚Äî —É–≤–µ—Ä–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\n"
            "4 ‚Äî –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\n"
        ),
        keyboard=keyboards.ai_levels,  # –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
    )
])
